class Solution {
public:
    bool isPalindrome(string s, int start, int end)
    {
        while(start<=end)
        {
            if(s[start]!=s[end]) return false;
            start++;
            end--;
        }
        return true;
    }
    void helper(vector<vector<string>>& ans, vector<string>&path, int index, string s)
    {
        if(index==s.size())
        {
            ans.push_back(path);
            return;
        }
        
        for(int i=index;i<s.size();i++)
        {
            if(isPalindrome(s,index, i))
            {
                path.push_back(s.substr(index, i-index+1));
                helper(ans, path, i+1, s);
                path.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) 
    {
        vector<vector<string>> ans;
        vector<string> path;
        helper(ans, path, 0, s);
        return ans;
    }
};
